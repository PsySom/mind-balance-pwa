import { Button } from '@/components/ui/button';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

export default function DebugJwtButton() {
  const { toast } = useToast();

  const handleCopyJwt = async () => {
    try {
      const { data: { session }, error } = await supabase.auth.getSession();
      
      if (error || !session) {
        toast({
          title: "‚ùå –û—à–∏–±–∫–∞",
          description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é",
          variant: "destructive"
        });
        return;
      }

      const accessToken = session.access_token;
      const userId = session.user.id;

      // –§–æ—Ä–º–∞—Ç PowerShell
      const powershellCommand = `$JWT = "${accessToken}"\n$USER_ID = "${userId}"`;

      // –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä
      await navigator.clipboard.writeText(powershellCommand);

      // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
      console.log('=== JWT DEBUG INFO ===');
      console.log(powershellCommand);
      console.log('======================');

      toast({
        title: "‚úÖ JWT —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä!",
        description: "–¢–∞–∫–∂–µ –≤—ã–≤–µ–¥–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å"
      });
    } catch (error) {
      console.error('Error copying JWT:', error);
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å JWT",
        variant: "destructive"
      });
    }
  };

  return (
    <Button
      onClick={handleCopyJwt}
      className="fixed top-4 right-4 z-[9999] bg-green-600 hover:bg-green-700 text-white shadow-lg"
      size="sm"
    >
      <span className="mr-2">üìã</span>
      Copy JWT
    </Button>
  );
}
